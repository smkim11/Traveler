{"ast":null,"code":"var _jsxFileName = \"/Users/hiciz/Downloads/k_project-main/src/components/ChatBot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Loader from \"./Loader\";\nimport '../styles/chatBot.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatBot = ({\n  chatPrompt,\n  flightData\n}) => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [replies, setReplies] = useState([]);\n  const [userMessage, setUserMessage] = useState('');\n  useEffect(() => {\n    if (chatPrompt) {\n      setReplies(prevReplies => [...prevReplies, chatPrompt]);\n    }\n\n    // flightData가 존재하면 이를 추가하여 출력\n    if (flightData && flightData.length > 0) {\n      const flightInfo = flightData.map((flight, index) => {\n        const originLocationCode = flight.itineraries[0].segments[0].departure.iataCode;\n        const destinationLocationCode = flight.itineraries[0].segments[0].arrival.iataCode;\n        const carrierCode = flight.itineraries[0].segments[0].carrierCode;\n        const cabinClass = flight.itineraries[0].segments[0].cabin || flight.itineraries[0].segments[0].travelClass || \"정보 없음\";\n        const price = flight.price.total;\n        return `항공편 ${index + 1}: 항공사 - ${carrierCode}, 출발지 - ${originLocationCode}, 도착지 - ${destinationLocationCode}, 좌석 등급 - ${cabinClass}, 가격 - ${price}`;\n      });\n      setReplies(prevReplies => [...prevReplies, ...flightInfo]);\n    }\n  }, [chatPrompt, flightData]);\n  const handleSubmit = async () => {\n    if (!userMessage.trim()) return;\n    setLoading(true);\n    setReplies([...replies, userMessage]);\n    setUserMessage('');\n    const messagesWithFlightData = [{\n      role: \"system\",\n      content: \"You are a helpful Travel Guide, and only use Korean.\"\n    }, ...flightData.map((flight, index) => ({\n      role: \"system\",\n      content: `항공편 ${index + 1}: 항공사 - ${flight.itineraries[0].segments[0].carrierCode}, 출발지 - ${flight.itineraries[0].segments[0].departure.iataCode}, 도착지 - ${flight.itineraries[0].segments[0].arrival.iataCode}, 좌석 등급 - ${flight.itineraries[0].segments[0].cabin || \"정보 없음\"}, 가격 - ${flight.price.total}`\n    })), {\n      role: \"user\",\n      content: userMessage\n    }];\n    try {\n      const response = await fetch(\"http://localhost:8000/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: userMessage,\n          flightData: flightData // 데이터가 여기에 포함되도록 다시 한 번 확인\n        })\n      });\n      if (!response.ok) {\n        console.error('API response error:', response.status, response.statusText);\n        setReplies(prevReplies => [...prevReplies, \"API 요청에 실패했습니다. 상태 코드: \" + response.status]);\n        return;\n      }\n      const result = await response.json();\n      const assistantMessage = result.response;\n      setReplies(prevReplies => [...prevReplies, assistantMessage]);\n    } catch (error) {\n      console.error('Error:', error);\n      setReplies(prevReplies => [...prevReplies, \"문제가 발생했습니다. 다시 시도해 주세요.\"]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: \"ChatBot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-window\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"message-list\",\n          children: replies.map((reply, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"message\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-body\",\n              children: /*#__PURE__*/_jsxDEV(\"pre\", {\n                children: reply\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"message-input\",\n          placeholder: \"\\uBA54\\uC2DC\\uC9C0\",\n          value: userMessage,\n          onChange: e => setUserMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui-btn\",\n          onClick: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uC785\\uB825\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ChatBot, \"nC+NThK7axjcKKiE9WFiDOkXjfo=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useEffect","Loader","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatBot","chatPrompt","flightData","_s","loading","setLoading","replies","setReplies","userMessage","setUserMessage","prevReplies","length","flightInfo","map","flight","index","originLocationCode","itineraries","segments","departure","iataCode","destinationLocationCode","arrival","carrierCode","cabinClass","cabin","travelClass","price","total","handleSubmit","trim","messagesWithFlightData","role","content","response","fetch","method","headers","body","JSON","stringify","message","ok","console","error","status","statusText","result","json","assistantMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","className","reply","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/hiciz/Downloads/k_project-main/src/components/ChatBot.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Loader from \"./Loader\";\r\nimport '../styles/chatBot.css';\r\n\r\nconst ChatBot = ({ chatPrompt, flightData }) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [replies, setReplies] = useState([]);\r\n    const [userMessage, setUserMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (chatPrompt) {\r\n            setReplies(prevReplies => [...prevReplies, chatPrompt]);\r\n        }\r\n\r\n        // flightData가 존재하면 이를 추가하여 출력\r\n        if (flightData && flightData.length > 0) {\r\n            const flightInfo = flightData.map((flight, index) => {\r\n                const originLocationCode = flight.itineraries[0].segments[0].departure.iataCode;\r\n                const destinationLocationCode = flight.itineraries[0].segments[0].arrival.iataCode;\r\n                const carrierCode = flight.itineraries[0].segments[0].carrierCode;\r\n                const cabinClass = flight.itineraries[0].segments[0].cabin || flight.itineraries[0].segments[0].travelClass || \"정보 없음\";\r\n                const price = flight.price.total;\r\n\r\n                return `항공편 ${index + 1}: 항공사 - ${carrierCode}, 출발지 - ${originLocationCode}, 도착지 - ${destinationLocationCode}, 좌석 등급 - ${cabinClass}, 가격 - ${price}`;\r\n            });\r\n            setReplies(prevReplies => [...prevReplies, ...flightInfo]);\r\n        }\r\n    }, [chatPrompt, flightData]);\r\n\r\n    const handleSubmit = async () => {\r\n        if (!userMessage.trim()) return;\r\n    \r\n        setLoading(true);\r\n        setReplies([...replies, userMessage]);\r\n        setUserMessage('');\r\n    \r\n        const messagesWithFlightData = [\r\n            { role: \"system\", content: \"You are a helpful Travel Guide, and only use Korean.\" },\r\n            ...flightData.map((flight, index) => ({\r\n                role: \"system\",\r\n                content: `항공편 ${index + 1}: 항공사 - ${flight.itineraries[0].segments[0].carrierCode}, 출발지 - ${flight.itineraries[0].segments[0].departure.iataCode}, 도착지 - ${flight.itineraries[0].segments[0].arrival.iataCode}, 좌석 등급 - ${flight.itineraries[0].segments[0].cabin || \"정보 없음\"}, 가격 - ${flight.price.total}`\r\n            })),\r\n            { role: \"user\", content: userMessage }\r\n        ];\r\n    \r\n        try {\r\n            const response = await fetch(\"http://localhost:8000/chat\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    message: userMessage,\r\n                    flightData: flightData  // 데이터가 여기에 포함되도록 다시 한 번 확인\r\n                })\r\n            });\r\n    \r\n            if (!response.ok) {\r\n                console.error('API response error:', response.status, response.statusText);\r\n                setReplies(prevReplies => [...prevReplies, \"API 요청에 실패했습니다. 상태 코드: \" + response.status]);\r\n                return;\r\n            }\r\n    \r\n            const result = await response.json();\r\n            const assistantMessage = result.response;\r\n            setReplies(prevReplies => [...prevReplies, assistantMessage]);\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            setReplies(prevReplies => [...prevReplies, \"문제가 발생했습니다. 다시 시도해 주세요.\"]);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n    \r\n\r\n    return (\r\n        <>\r\n            {loading && <Loader />}\r\n            <div className=\"card\">\r\n                <div className=\"chat-header\">ChatBot</div>\r\n                <div className=\"chat-window\">\r\n                    <ul className=\"message-list\">\r\n                        {replies.map((reply, index) => (\r\n                            <li key={index} className=\"message\">\r\n                                <div className=\"message-body\">\r\n                                    <pre>{reply}</pre>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"chat-input\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"message-input\"\r\n                        placeholder=\"메시지\"\r\n                        value={userMessage}\r\n                        onChange={(e) => setUserMessage(e.target.value)}\r\n                    />\r\n                    <button className=\"ui-btn\" onClick={handleSubmit}>\r\n                        <span>입력</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ChatBot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}