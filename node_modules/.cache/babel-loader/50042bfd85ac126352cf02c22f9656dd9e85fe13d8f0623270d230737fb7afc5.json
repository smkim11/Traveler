{"ast":null,"code":"var _jsxFileName = \"/Users/hiciz/Downloads/k_project-main/src/components/ChatBot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Loader from \"./Loader\";\nimport '../styles/chatBot.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatBot = ({\n  chatPrompt,\n  flightData\n}) => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [replies, setReplies] = useState([]);\n  const [userMessage, setUserMessage] = useState('');\n  const chatWindowRef = useRef(null);\n  useEffect(() => {\n    if (chatPrompt) {\n      setReplies(prevReplies => [...prevReplies, {\n        content: chatPrompt,\n        type: 'chatbot'\n      }]);\n    }\n    if (flightData && flightData.length > 0) {\n      const flightInfo = flightData.map((itineraries, flightIndex) => {\n        return itineraries.map((flight, itineraryIndex) => {\n          const legText = itineraryIndex === 0 ? \"가는 편\" : \"오는 편\";\n          const originLocationCode = flight.origin;\n          const destinationLocationCode = flight.destination;\n          const carrierCode = flight.carrier;\n          const cabinClass = flight.cabin_class || \"정보 없음\";\n          const price = flight.price;\n          return {\n            content: `항공편 ${flightIndex + 1} - ${legText}: 항공사 - ${carrierCode}, 출발지 - ${originLocationCode}, 도착지 - ${destinationLocationCode}, 좌석 등급 - ${cabinClass}, 가격 - ${price}`,\n            type: 'flight'\n          };\n        });\n      }).flat();\n      setReplies(prevReplies => [...prevReplies, ...flightInfo]);\n    }\n  }, [chatPrompt, flightData]);\n  useEffect(() => {\n    if (chatWindowRef.current) {\n      chatWindowRef.current.scrollTop = chatWindowRef.current.scrollHeight;\n    }\n  }, [replies]);\n  const fetchAdditionalFlights = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(\"http://localhost:8000/flights\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          // 필요한 검색 조건들을 다시 넣어줌\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        const additionalFlightInfo = data.flight_data.map((itineraries, flightIndex) => {\n          return itineraries.map((flight, itineraryIndex) => {\n            const legText = itineraryIndex === 0 ? \"가는 편\" : \"오는 편\";\n            const originLocationCode = flight.origin;\n            const destinationLocationCode = flight.destination;\n            const carrierCode = flight.carrier;\n            const cabinClass = flight.cabin_class || \"정보 없음\";\n            const price = flight.price;\n            return {\n              content: `추가 항공편 ${flightIndex + 1} - ${legText}: 항공사 - ${carrierCode}, 출발지 - ${originLocationCode}, 도착지 - ${destinationLocationCode}, 좌석 등급 - ${cabinClass}, 가격 - ${price}`,\n              type: 'flight'\n            };\n          });\n        }).flat();\n        setReplies(prevReplies => [...prevReplies, ...additionalFlightInfo]);\n      }\n    } catch (error) {\n      console.error('Error fetching additional flights:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSubmit = async () => {\n    if (!userMessage.trim()) return;\n    setLoading(true);\n    setReplies([...replies, {\n      content: userMessage,\n      type: 'user'\n    }]);\n    setUserMessage('');\n    if (userMessage.includes(\"20개 더\")) {\n      await fetchAdditionalFlights();\n      return;\n    }\n    const messagesWithFlightData = [{\n      role: \"system\",\n      content: \"You are a helpful Travel Guide, and only use Korean.\"\n    }, ...flightData.map((itineraries, flightIndex) => {\n      return itineraries.map((flight, itineraryIndex) => {\n        const legText = itineraryIndex === 0 ? \"가는 편\" : \"오는 편\";\n        return {\n          role: \"system\",\n          content: `항공편 ${flightIndex + 1} - ${legText}: 항공사 - ${flight.carrier}, 출발지 - ${flight.origin}, 도착지 - ${flight.destination}, 좌석 등급 - ${flight.cabin_class || \"정보 없음\"}, 가격 - ${flight.price}`\n        };\n      });\n    }).flat(), {\n      role: \"user\",\n      content: userMessage\n    }];\n    try {\n      const response = await fetch(\"http://localhost:8000/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: userMessage,\n          flightData: flightData\n        })\n      });\n      if (!response.ok) {\n        console.error('API response error:', response.status, response.statusText);\n        setReplies(prevReplies => [...prevReplies, {\n          content: \"API 요청에 실패했습니다. 상태 코드: \" + response.status,\n          type: 'chatbot'\n        }]);\n        return;\n      }\n      const result = await response.json();\n      const assistantMessage = result.response;\n      setReplies(prevReplies => [...prevReplies, {\n        content: assistantMessage,\n        type: 'chatbot'\n      }]);\n    } catch (error) {\n      console.error('Error:', error);\n      setReplies(prevReplies => [...prevReplies, {\n        content: \"문제가 발생했습니다. 다시 시도해 주세요.\",\n        type: 'chatbot'\n      }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: \"ChatBot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-window\",\n        ref: chatWindowRef,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"message-list\",\n          children: replies.map((reply, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `message ${reply.type === 'user' ? 'user-message' : 'bot-message'}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-body\",\n              children: /*#__PURE__*/_jsxDEV(\"pre\", {\n                children: reply.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 33\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"message-input\",\n          placeholder: \"\\uBA54\\uC2DC\\uC9C0\",\n          value: userMessage,\n          onChange: e => setUserMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui-btn\",\n          onClick: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uC785\\uB825\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ChatBot, \"u7A55mOb8dh2njKAKrB0sMlpPuA=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Loader","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatBot","chatPrompt","flightData","_s","loading","setLoading","replies","setReplies","userMessage","setUserMessage","chatWindowRef","prevReplies","content","type","length","flightInfo","map","itineraries","flightIndex","flight","itineraryIndex","legText","originLocationCode","origin","destinationLocationCode","destination","carrierCode","carrier","cabinClass","cabin_class","price","flat","current","scrollTop","scrollHeight","fetchAdditionalFlights","response","fetch","method","headers","body","JSON","stringify","ok","data","json","additionalFlightInfo","flight_data","error","console","handleSubmit","trim","includes","messagesWithFlightData","role","message","status","statusText","result","assistantMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","className","ref","reply","index","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/hiciz/Downloads/k_project-main/src/components/ChatBot.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport Loader from \"./Loader\";\r\nimport '../styles/chatBot.css';\r\n\r\nconst ChatBot = ({ chatPrompt, flightData }) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [replies, setReplies] = useState([]);\r\n    const [userMessage, setUserMessage] = useState('');\r\n    const chatWindowRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (chatPrompt) {\r\n            setReplies(prevReplies => [...prevReplies, { content: chatPrompt, type: 'chatbot' }]);\r\n        }\r\n\r\n        if (flightData && flightData.length > 0) {\r\n            const flightInfo = flightData.map((itineraries, flightIndex) => {\r\n                return itineraries.map((flight, itineraryIndex) => {\r\n                    const legText = itineraryIndex === 0 ? \"가는 편\" : \"오는 편\";\r\n                    const originLocationCode = flight.origin;\r\n                    const destinationLocationCode = flight.destination;\r\n                    const carrierCode = flight.carrier;\r\n                    const cabinClass = flight.cabin_class || \"정보 없음\";\r\n                    const price = flight.price;\r\n\r\n                    return {\r\n                        content: `항공편 ${flightIndex + 1} - ${legText}: 항공사 - ${carrierCode}, 출발지 - ${originLocationCode}, 도착지 - ${destinationLocationCode}, 좌석 등급 - ${cabinClass}, 가격 - ${price}`,\r\n                        type: 'flight'\r\n                    };\r\n                });\r\n            }).flat();\r\n            setReplies(prevReplies => [...prevReplies, ...flightInfo]);\r\n        }\r\n    }, [chatPrompt, flightData]);\r\n\r\n    useEffect(() => {\r\n        if (chatWindowRef.current) {\r\n            chatWindowRef.current.scrollTop = chatWindowRef.current.scrollHeight;\r\n        }\r\n    }, [replies]);\r\n\r\n    const fetchAdditionalFlights = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const response = await fetch(\"http://localhost:8000/flights\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    // 필요한 검색 조건들을 다시 넣어줌\r\n                })\r\n            });\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                const additionalFlightInfo = data.flight_data.map((itineraries, flightIndex) => {\r\n                    return itineraries.map((flight, itineraryIndex) => {\r\n                        const legText = itineraryIndex === 0 ? \"가는 편\" : \"오는 편\";\r\n                        const originLocationCode = flight.origin;\r\n                        const destinationLocationCode = flight.destination;\r\n                        const carrierCode = flight.carrier;\r\n                        const cabinClass = flight.cabin_class || \"정보 없음\";\r\n                        const price = flight.price;\r\n\r\n                        return {\r\n                            content: `추가 항공편 ${flightIndex + 1} - ${legText}: 항공사 - ${carrierCode}, 출발지 - ${originLocationCode}, 도착지 - ${destinationLocationCode}, 좌석 등급 - ${cabinClass}, 가격 - ${price}`,\r\n                            type: 'flight'\r\n                        };\r\n                    });\r\n                }).flat();\r\n                setReplies(prevReplies => [...prevReplies, ...additionalFlightInfo]);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching additional flights:', error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        if (!userMessage.trim()) return;\r\n\r\n        setLoading(true);\r\n        setReplies([...replies, { content: userMessage, type: 'user' }]);\r\n        setUserMessage('');\r\n\r\n        if (userMessage.includes(\"20개 더\")) {\r\n            await fetchAdditionalFlights();\r\n            return;\r\n        }\r\n\r\n        const messagesWithFlightData = [\r\n            { role: \"system\", content: \"You are a helpful Travel Guide, and only use Korean.\" },\r\n            ...flightData.map((itineraries, flightIndex) => {\r\n                return itineraries.map((flight, itineraryIndex) => {\r\n                    const legText = itineraryIndex === 0 ? \"가는 편\" : \"오는 편\";\r\n                    return {\r\n                        role: \"system\",\r\n                        content: `항공편 ${flightIndex + 1} - ${legText}: 항공사 - ${flight.carrier}, 출발지 - ${flight.origin}, 도착지 - ${flight.destination}, 좌석 등급 - ${flight.cabin_class || \"정보 없음\"}, 가격 - ${flight.price}`\r\n                    };\r\n                });\r\n            }).flat(),\r\n            { role: \"user\", content: userMessage }\r\n        ];\r\n\r\n        try {\r\n            const response = await fetch(\"http://localhost:8000/chat\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    message: userMessage,\r\n                    flightData: flightData\r\n                })\r\n            });\r\n\r\n            if (!response.ok) {\r\n                console.error('API response error:', response.status, response.statusText);\r\n                setReplies(prevReplies => [...prevReplies, { content: \"API 요청에 실패했습니다. 상태 코드: \" + response.status, type: 'chatbot' }]);\r\n                return;\r\n            }\r\n\r\n            const result = await response.json();\r\n            const assistantMessage = result.response;\r\n            setReplies(prevReplies => [...prevReplies, { content: assistantMessage, type: 'chatbot' }]);\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            setReplies(prevReplies => [...prevReplies, { content: \"문제가 발생했습니다. 다시 시도해 주세요.\", type: 'chatbot' }]);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {loading && <Loader />}\r\n            <div className=\"card\">\r\n                <div className=\"chat-header\">ChatBot</div>\r\n                <div className=\"chat-window\" ref={chatWindowRef}>\r\n                    <ul className=\"message-list\">\r\n                        {replies.map((reply, index) => (\r\n                            <li\r\n                                key={index}\r\n                                className={`message ${reply.type === 'user' ? 'user-message' : 'bot-message'}`}\r\n                            >\r\n                                <div className=\"message-body\">\r\n                                    <pre>{reply.content}</pre>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"chat-input\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"message-input\"\r\n                        placeholder=\"메시지\"\r\n                        value={userMessage}\r\n                        onChange={(e) => setUserMessage(e.target.value)}\r\n                    />\r\n                    <button className=\"ui-btn\" onClick={handleSubmit}>\r\n                        <span>입력</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ChatBot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}